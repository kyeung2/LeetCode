package io.nimbus.leetcode.recursion1.conclusion;

/**
 * https://leetcode.com/explore/learn/card/recursion-i/253/conclusion/1675/
 */
public class KthSymbolInGrammar {




    /**
     didn't get anywhere on this one. very smart solution from https://leetcode.com/explore/learn/card/recursion-i/253/conclusion/1675/discuss/265892/Runtime-0ms-Java-solution-with-explanation

     the Kth value is generated by K / 2 in Row N - 1,
     if K is even, Kth value equals K/2th value in Row N - 1,
     otherwise Kth value equals reverse K/2th in Row N - 1,
     */
        public int kthGrammar(int N, int K) {
            return kth(K - 1);
        }

        public int kth(int K){
            if(K == 0)      return 0;
            if(K % 2 == 0)  return kth(K / 2);
            else            return reverse(kth(K / 2));
        }

        private int reverse(int val){
            return val == 0 ? 1 : 0;
        }
}
